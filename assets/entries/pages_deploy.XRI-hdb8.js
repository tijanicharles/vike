import{j as e,L as i,o as n,i as d}from"../chunks/chunk-B55XmmrA.js";import{L as a}from"../chunks/chunk-DgJHo8Pc.js";/* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      */import"../chunks/chunk-DujD3LDN.js";import{J as l}from"../chunks/chunk-N4BzeUuH.js";/* empty css                      *//* empty css                      */const s=[];function r(t){const o={p:"p",...t.components};return e.jsxs(e.Fragment,{children:[e.jsxs(o.p,{children:[e.jsx(l,{})," This means you you can use any deployment strategy and any deployment provider."]}),`
`,e.jsxs(o.p,{children:["You can also ",e.jsx(a,{text:"pre-render",href:"/pre-rendering"})," your pages to remove the need for a production server and deploy to a ",e.jsx(a,{text:"static host",href:"/static-hosts"})," instead."]})]})}function p(t={}){const{wrapper:o}=t.components||{};return o?e.jsx(o,{...t,children:e.jsx(r,{...t})}):r(t)}const u=Object.freeze(Object.defineProperty({__proto__:null,default:p,pageSectionsExport:s},Symbol.toStringTag,{value:"Module"})),w={isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:{server:!0}}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},Layout:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/Layout",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:i}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:n}},TopNavigation:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/+TopNavigation.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:d}},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/deploy/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:u}}};export{w as configValuesSerialized};
