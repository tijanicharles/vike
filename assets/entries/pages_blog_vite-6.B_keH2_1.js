import{j as e,L as r,o as n,i as l}from"../chunks/chunk-B55XmmrA.js";import{L as a}from"../chunks/chunk-DgJHo8Pc.js";/* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      */import"../chunks/chunk-DujD3LDN.js";/* empty css                      */const s=[{pageSectionId:"what-does-it-mean-for-users",pageSectionLevel:2,pageSectionTitle:"What does it mean for users?"},{pageSectionId:"what-does-it-mean-for-vike-users",pageSectionLevel:2,pageSectionTitle:"What does it mean for Vike users?"},{pageSectionId:"closing-words",pageSectionLevel:2,pageSectionTitle:"Closing words"}];function i(o){const t={a:"a",blockquote:"blockquote",code:"code",li:"li",p:"p",strong:"strong",ul:"ul",...o.components};return e.jsxs(e.Fragment,{children:[e.jsxs(t.p,{children:[e.jsx(t.a,{href:"https://vite.dev/blog/announcing-vite6",children:"Vite 6 was released yesterday"})," and introduces a groundbreaking new API: the ",e.jsx(t.a,{href:"https://vite.dev/guide/api-environment.html",children:"Environment API"}),"."]}),`
`,e.jsx(t.p,{children:"It's a low-level API and you'll probably never directly interact with it, but its impact is profound for users."}),`
`,e.jsxs(t.blockquote,{children:[`
`,e.jsx(t.p,{children:e.jsx(t.strong,{children:"Edit for reddit folks:"})}),`
`,e.jsxs(t.ul,{children:[`
`,e.jsxs(t.li,{children:[e.jsx(t.a,{href:"/",children:"Vike"})," (with ",e.jsx(t.strong,{children:"k"}),") is a framework like Next.js/Nuxt that is built on top of ",e.jsx(t.a,{href:"https://vite.dev",children:"Vite"})," (with ",e.jsx(t.strong,{children:"t"}),") which is a bundler like webpack. Both projects are unaffiliated (atlthough we often collaborate)."]}),`
`,e.jsx(t.li,{children:"The Vite 6 announcement post (see link above) doesn't explain the benefits of the Environment API for users; this blog post gives a high-level explanation of what it unlocks."}),`
`]}),`
`]}),`
`,e.jsx("h2",{id:"what-does-it-mean-for-users",children:"What does it mean for users?"}),`
`,e.jsxs(t.p,{children:["The most notable benefit is that you'll be able to develop directly against edge environments. For example, you'll be able to develop your ",e.jsx(t.a,{href:"https://github.com/cloudflare/workerd",children:"workerd"})," code (your Cloudflare Worker) while getting the full Vite experience such as HMR."]}),`
`,e.jsx(t.p,{children:"In other words, you will develop code that works equally well between dev and prod. You'll get a unified stack."}),`
`,e.jsx(t.p,{children:"This is major milestone for edge deployment, as you will develop for the edge (Cloudflare Workers, Vercel Edge, ...) as conveniently as for a Node.js/Bun/Deno server."}),`
`,e.jsxs(t.blockquote,{children:[`
`,e.jsx(t.p,{children:"The Environment API has been developed with tight feedback from the Cloudflare Workers team."}),`
`]}),`
`,e.jsx("h2",{id:"what-does-it-mean-for-vike-users",children:"What does it mean for Vike users?"}),`
`,e.jsxs(t.p,{children:["Concretely, as a Vike user, you'll simply install ",e.jsx(t.code,{children:"vike-cloudflare"})," and ",e.jsx(t.code,{children:"vike-hono"})," and then develop your Hono code directly against Cloudflare Workers. Everything is automatically integrated, so there isn't any glue code for you to write."]}),`
`,e.jsxs(t.p,{children:["We're currently working on these extensions as we speak (and many more such as ",e.jsx(t.code,{children:"vike-vercel"}),", ",e.jsx(t.code,{children:"vike-express"}),", ",e.jsx(t.code,{children:"vike-fastify"}),", ...)."]}),`
`,e.jsxs(t.p,{children:["Staying true to Vike's flexible nature, you'll be able to ",e.jsx(a,{href:"/eject",children:"eject"})," glue code if you have requirements that need it."]}),`
`,e.jsxs(t.p,{children:["We already implemented the groundwork and we're currently working on bringing everything together. For example, we've implemented ",e.jsx(t.a,{href:"https://github.com/magne4000/universal-middleware",children:e.jsx(t.code,{children:"universal-middleware"})})," which is essentially the glue code between tools (Vike/Telefunc/...), the deployment environment (Node.js/Cloudflare/Vercel/...), and the server framework (Hono/Express.js/Fastify/...)."]}),`
`,e.jsx(t.p,{children:"We're making a lot of progress and we'll probably release something later this year."}),`
`,e.jsx("h2",{id:"closing-words",children:"Closing words"}),`
`,e.jsx(t.p,{children:"The Environment API is a structural improvement to Vite (it now has multiple module graphs), enabling not only what we just discussed but also enabling Vite-based frameworks to implement new techniques such as React Server Components (it requires its own separate module graph)."}),`
`,e.jsx(t.p,{children:"The future looks bright."})]})}function d(o={}){const{wrapper:t}=o.components||{};return t?e.jsx(t,{...o,children:e.jsx(i,{...o})}):i(o)}const h=Object.freeze(Object.defineProperty({__proto__:null,default:d,pageSectionsExport:s},Symbol.toStringTag,{value:"Module"})),b={isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:{server:!0}}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},Layout:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/Layout",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:r}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:n}},TopNavigation:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/+TopNavigation.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:l}},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/blog/vite-6/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:h}}};export{b as configValuesSerialized};
