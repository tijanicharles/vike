import{j as t,L as i,o as r,i as n}from"../chunks/chunk-B55XmmrA.js";import{L as l}from"../chunks/chunk-DgJHo8Pc.js";/* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      */import"../chunks/chunk-DujD3LDN.js";import{p as s}from"../chunks/chunk-DVfHDNsY.js";/* empty css                      */const d=[];function a(e){const o={p:"p",...e.components};return t.jsxs(o.p,{children:[`For questions and issues related to Vike, you can always open a
`,t.jsx("a",{href:s.githubDiscussions,children:"GitHub Discussion"}),`. But sometimes you may need a little extra help or you
may want to delegate some parts of your project. Members of the `,t.jsx(l,{href:"/#team",children:"Vike team"}),` may be
available for consulting. Reach out directly to them.`]})}function p(e={}){const{wrapper:o}=e.components||{};return o?t.jsx(o,{...e,children:t.jsx(a,{...e})}):a(e)}const u=Object.freeze(Object.defineProperty({__proto__:null,default:p,pageSectionsExport:d},Symbol.toStringTag,{value:"Module"})),b={isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:{server:!0}}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},Layout:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/Layout",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:i}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:r}},TopNavigation:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/+TopNavigation.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:n}},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/consulting/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:u}}};export{b as configValuesSerialized};
