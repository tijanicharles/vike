import{j as e,L as a,o as s,i as r}from"../chunks/chunk-B55XmmrA.js";import{L as o}from"../chunks/chunk-DgJHo8Pc.js";/* empty css                      */import{W as i}from"../chunks/chunk-D-oex3SH.js";/* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      *//* empty css                      */import"../chunks/chunk-DujD3LDN.js";/* empty css                      *//* empty css                      */const d=[{pageSectionId:"see-also",pageSectionLevel:2,pageSectionTitle:"See also"}];function l(n){const t={blockquote:"blockquote",code:"code",figure:"figure",li:"li",p:"p",pre:"pre",span:"span",ul:"ul",...n.components};return e.jsxs(e.Fragment,{children:[e.jsxs(i,{children:[e.jsx(t.code,{children:"getGlobalContextSync()"})," and ",e.jsx(t.code,{children:"getGlobalContextAsync()"})," are beta features: expect breaking changes in any minor version update."]}),`
`,e.jsxs(t.p,{children:[e.jsx(t.code,{children:"getGlobalContextSync()"})," and ",e.jsx(t.code,{children:"getGlobalContextAsync()"})," allow you to access global information about your app."]}),`
`,e.jsxs(t.p,{children:["Most notably the ",e.jsx(o,{href:"/preloading#assets-manifest",children:"assets manifest"}),"."]}),`
`,e.jsx(t.figure,{"data-rehype-pretty-code-figure":"",children:e.jsx(t.pre,{style:{backgroundColor:"#fff",color:"#24292e"},tabIndex:"0","data-language":"js","data-theme":"github-light",children:e.jsxs(t.code,{"data-language":"js","data-theme":"github-light",style:{display:"grid"},children:[e.jsxs(t.span,{"data-line":"",children:[e.jsx(t.span,{style:{color:"#D73A49"},children:"import"}),e.jsx(t.span,{style:{color:"#24292E"},children:" {"})]}),`
`,e.jsx(t.span,{"data-line":"",children:e.jsx(t.span,{style:{color:"#24292E"},children:"  getGlobalContextSync,"})}),`
`,e.jsx(t.span,{"data-line":"",children:e.jsx(t.span,{style:{color:"#6A737D"},children:"  /* Or:"})}),`
`,e.jsx(t.span,{"data-line":"",children:e.jsx(t.span,{style:{color:"#6A737D"},children:"  getGlobalContextAsync */"})}),`
`,e.jsxs(t.span,{"data-line":"",children:[e.jsx(t.span,{style:{color:"#24292E"},children:"} "}),e.jsx(t.span,{style:{color:"#D73A49"},children:"from"}),e.jsx(t.span,{style:{color:"#032F62"},children:" 'vike/server'"})]}),`
`,e.jsx(t.span,{"data-line":"",children:" "}),`
`,e.jsxs(t.span,{"data-line":"",children:[e.jsx(t.span,{style:{color:"#D73A49"},children:"const"}),e.jsx(t.span,{style:{color:"#005CC5"},children:" globalContext"}),e.jsx(t.span,{style:{color:"#D73A49"},children:" ="}),e.jsx(t.span,{style:{color:"#6F42C1"},children:" getGlobalContextSync"}),e.jsx(t.span,{style:{color:"#24292E"},children:"()"})]}),`
`,e.jsxs(t.span,{"data-line":"",children:[e.jsx(t.span,{style:{color:"#D73A49"},children:"const"}),e.jsx(t.span,{style:{color:"#24292E"},children:" { "}),e.jsx(t.span,{style:{color:"#005CC5"},children:"assetsManifest"}),e.jsx(t.span,{style:{color:"#24292E"},children:" } "}),e.jsx(t.span,{style:{color:"#D73A49"},children:"="}),e.jsx(t.span,{style:{color:"#24292E"},children:" globalContext"})]})]})})}),`
`,e.jsxs(t.blockquote,{children:[`
`,e.jsxs(t.p,{children:["The ",e.jsx(t.code,{children:"globalContext"})," object also contains internals (they are prefixed with ",e.jsx(t.code,{children:"_"}),", e.g. ",e.jsx(t.code,{children:"globalContext._viteDevServer"}),"). You should use them only if strictly needed, and if you do then let us know so that we make what you need part of the official API."]}),`
`]}),`
`,e.jsxs(t.blockquote,{children:[`
`,e.jsxs(t.p,{children:["In certain situations, you may need to use ",e.jsx(t.code,{children:"await getGlobalContextAsync()"})," instead of ",e.jsx(t.code,{children:"getGlobalContextSync()"}),". The ",e.jsx(t.code,{children:"getGlobalContextSync()"})," function will let you know when that is the case."]}),`
`]}),`
`,e.jsx("h2",{id:"see-also",children:"See also"}),`
`,e.jsxs(t.ul,{children:[`
`,e.jsxs(t.li,{children:[`
`,e.jsx(o,{href:"/preloading#assets-manifest"}),`
`]}),`
`]})]})}function c(n={}){const{wrapper:t}=n.components||{};return t?e.jsx(t,{...n,children:e.jsx(l,{...n})}):l(n)}const p=Object.freeze(Object.defineProperty({__proto__:null,default:c,pageSectionsExport:d},Symbol.toStringTag,{value:"Module"})),T={isClientRuntimeLoaded:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:!0}},onBeforeRenderEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:{server:!0}}},dataEnv:{type:"computed",definedAtData:null,valueSerialized:{type:"js-serialized",value:null}},Layout:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/Layout",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:a}},hydrationCanBeAborted:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/config",fileExportPathToShowToUser:["default","hydrationCanBeAborted"]},valueSerialized:{type:"js-serialized",value:!0}},onRenderClient:{type:"standard",definedAtData:{filePathToShowToUser:"@brillout/docpress/renderer/onRenderClient",fileExportPathToShowToUser:[]},valueSerialized:{type:"pointer-import",value:s}},TopNavigation:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/+TopNavigation.tsx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:r}},Page:{type:"standard",definedAtData:{filePathToShowToUser:"/pages/getGlobalContext/+Page.mdx",fileExportPathToShowToUser:[]},valueSerialized:{type:"plus-file",exportValues:p}}};export{T as configValuesSerialized};
